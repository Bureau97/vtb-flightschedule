{"version":3,"file":"vtb-flightschedule_test.js","sourceRoot":"","sources":["../../src/test/vtb-flightschedule_test.ts"],"names":[],"mappings":";AAAA;;;;GAIG;AAEH,qDAAqD;AAErD,oDAAoD;AACpD,2CAA2C;AAE3C,sCAAsC;AACtC,+BAA+B;AAC/B,+DAA+D;AAC/D,wCAAwC;AACxC,QAAQ;AAER,sDAAsD;AACtD,iFAAiF;AACjF,8BAA8B;AAC9B,YAAY;AACZ,UAAU;AACV,+BAA+B;AAC/B,sDAAsD;AACtD,sBAAsB;AACtB,QAAQ;AACR,SAAS;AACT,QAAQ;AAER,kDAAkD;AAClD,6FAA6F;AAC7F,8BAA8B;AAC9B,YAAY;AACZ,UAAU;AACV,8BAA8B;AAC9B,sDAAsD;AACtD,sBAAsB;AACtB,QAAQ;AACR,SAAS;AACT,QAAQ;AAER,0CAA0C;AAC1C,gGAAgG;AAChG,8DAA8D;AAC9D,sBAAsB;AACtB,+BAA+B;AAC/B,8BAA8B;AAC9B,YAAY;AACZ,UAAU;AACV,+BAA+B;AAC/B,sDAAsD;AACtD,sBAAsB;AACtB,QAAQ;AACR,SAAS;AACT,QAAQ;AAER,0CAA0C;AAC1C,gGAAgG;AAChG,+BAA+B;AAC/B,6DAA6D;AAC7D,QAAQ;AACR,MAAM","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// import {VtbMedia} from '../vtb-flightschedule.js';\n\n// import {fixture, assert} from '@open-wc/testing';\n// import {html} from 'lit/static-html.js';\n\n// suite('vtb-flightschedule', () => {\n//   test('is defined', () => {\n//     const el = document.createElement('vtb-flightschedule');\n//     assert.instanceOf(el, MyElement);\n//   });\n\n//   test('renders with default values', async () => {\n//     const el = await fixture(html`<vtb-flightschedule></vtb-flightschedule>`);\n//     assert.shadowDom.equal(\n//       el,\n//       `\n//       <h1>Hello, World!</h1>\n//       <button part=\"button\">Click Count: 0</button>\n//       <slot></slot>\n//     `\n//     );\n//   });\n\n//   test('renders with a set name', async () => {\n//     const el = await fixture(html`<vtb-flightschedule name=\"Test\"></vtb-flightschedule>`);\n//     assert.shadowDom.equal(\n//       el,\n//       `\n//       <h1>Hello, Test!</h1>\n//       <button part=\"button\">Click Count: 0</button>\n//       <slot></slot>\n//     `\n//     );\n//   });\n\n//   test('handles a click', async () => {\n//     const el = (await fixture(html`<vtb-flightschedule></vtb-flightschedule>`)) as MyElement;\n//     const button = el.shadowRoot!.querySelector('button')!;\n//     button.click();\n//     await el.updateComplete;\n//     assert.shadowDom.equal(\n//       el,\n//       `\n//       <h1>Hello, World!</h1>\n//       <button part=\"button\">Click Count: 1</button>\n//       <slot></slot>\n//     `\n//     );\n//   });\n\n//   test('styling applied', async () => {\n//     const el = (await fixture(html`<vtb-flightschedule></vtb-flightschedule>`)) as MyElement;\n//     await el.updateComplete;\n//     assert.equal(getComputedStyle(el).paddingTop, '16px');\n//   });\n// });\n"]}